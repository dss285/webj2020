[{"C:\\Users\\Tommi\\Documents\\web\\webj\\webj2020\\react\\react3\\src\\index.js":"1","C:\\Users\\Tommi\\Documents\\web\\webj\\webj2020\\react\\react3\\src\\App.js":"2","C:\\Users\\Tommi\\Documents\\web\\webj\\webj2020\\react\\react3\\src\\reportWebVitals.js":"3","C:\\Users\\Tommi\\Documents\\web\\webj\\webj2020\\react\\react3\\src\\AsiakasHaku.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":136,"mtime":1607354697975,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":2191,"mtime":1607357050168,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nvz1qw",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Tommi\\Documents\\web\\webj\\webj2020\\react\\react3\\src\\index.js",[],"C:\\Users\\Tommi\\Documents\\web\\webj\\webj2020\\react\\react3\\src\\App.js",[],"C:\\Users\\Tommi\\Documents\\web\\webj\\webj2020\\react\\react3\\src\\reportWebVitals.js",[],"C:\\Users\\Tommi\\Documents\\web\\webj\\webj2020\\react\\react3\\src\\AsiakasHaku.js",["18","19","20"],{"ruleId":"21","severity":1,"message":"22","line":3,"column":17,"nodeType":"23","messageId":"24","endLine":3,"endColumn":24},{"ruleId":"25","severity":1,"message":"26","line":6,"column":15,"nodeType":"27","endLine":18,"endColumn":6},{"ruleId":"25","severity":1,"message":"28","line":18,"column":8,"nodeType":"29","endLine":18,"endColumn":17,"suggestions":"30"},"no-unused-vars","'setStat' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'form' and 'stat'. Either include them or remove the dependency array.","ArrayExpression",["31"],{"desc":"32","fix":"33"},"Update the dependencies array to be: [form, loading, stat]",{"range":"34","text":"35"},[639,648],"[form, loading, stat]"]